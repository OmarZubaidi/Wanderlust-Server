// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  username      String
  sub           String         @unique
  emailVerified Boolean
  pictureUrl    String
  origin        String?
  Hotels        Hotel[]
  Flights       Flight[]
  UsersOnTrips  UsersOnTrips[]
  createdAt     DateTime       @default(now())
}

model Hotel {
  id          Int      @id @default(autoincrement())
  name        String
  location    String
  coordinates String
  arrival     DateTime
  departure   DateTime
  nights      Int
  priceTotal  String
  hotelApiId  Int      @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      Int
  trip        Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tripId      Int
  createdAt   DateTime @default(now())
}

model Flight {
  id             Int      @id @default(autoincrement())
  departure      DateTime
  arrival        DateTime
  gate           String
  depAirport     String
  arrAirport     String
  lengthOfFlight String
  price          String
  flightApiId    Int      @unique
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId         Int
  trip           Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tripId         Int
  createdAt      DateTime @default(now())
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  start       DateTime
  end         DateTime
  allDay      Boolean
  description String
  location    String
  coordinates String
  price       String   @default("free")
  eventApiId  Int      @unique
  bookingLink String
  type        String
  pictures    String
  rating      Float
  trip        Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tripId      Int
  createdAt   DateTime @default(now())
}

model Trip {
  id           Int            @id @default(autoincrement())
  start        DateTime
  end          DateTime
  destination  String
  Hotels       Hotel[]
  Flights      Flight[]
  Events       Event[]
  UsersOnTrips UsersOnTrips[]
  createdAt    DateTime       @default(now())
}

model UsersOnTrips {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    Int
  trip      Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tripId    Int
  createdAt DateTime @default(now())
}
