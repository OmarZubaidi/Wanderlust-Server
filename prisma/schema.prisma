// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int              @id @default(autoincrement())
  email          String           @unique
  username       String
  sub            String           @unique
  emailVerified  Boolean
  pictureUrl     String
  origin         String?
  mobilePassword String?
  UsersOnTrips   UsersOnTrips[]
  UsersOnHotels  UsersOnHotels[]
  UsersOnFlights UsersOnFlights[]
  createdAt      DateTime         @default(now())
}

model Hotel {
  id            Int             @id @default(autoincrement())
  name          String
  location      String
  latitude      Float
  longitude     Float
  arrival       DateTime
  departure     DateTime
  nights        Int
  priceTotal    Float
  description   String
  rating        String
  type          String
  hotelApiId    String
  createdAt     DateTime        @default(now())
  UsersOnHotels UsersOnHotels[]
}

model Flight {
  id             Int              @id @default(autoincrement())
  lengthOfFlight String
  price          Float
  departureCity  String
  arrivalCity    String
  flightApiId    Int
  createdAt      DateTime         @default(now())
  UsersOnFlights UsersOnFlights[]
  itineraries    String
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  start       DateTime
  end         DateTime
  allDay      Boolean
  description String
  location    String
  latitude    Float
  longitude   Float
  price       Float    @default(0)
  eventApiId  Int      @unique
  bookingLink String
  type        String
  pictures    String
  rating      Float
  trip        Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tripId      Int
  createdAt   DateTime @default(now())
}

model Trip {
  id             Int              @id @default(autoincrement())
  start          DateTime
  end            DateTime
  destination    String
  latitude       Float
  longitude      Float
  Events         Event[]
  UsersOnTrips   UsersOnTrips[]
  UsersOnHotels  UsersOnHotels[]
  UsersOnFlights UsersOnFlights[]
  createdAt      DateTime         @default(now())
}

model UsersOnTrips {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    Int
  trip      Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tripId    Int
  createdAt DateTime @default(now())
}

model UsersOnHotels {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    Int
  hotel     Hotel    @relation(fields: [hotelId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  hotelId   Int
  trip      Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tripId    Int
  createdAt DateTime @default(now())
}

model UsersOnFlights {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    Int
  flight    Flight   @relation(fields: [flightId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  flightId  Int
  trip      Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tripId    Int
  createdAt DateTime @default(now())
}
